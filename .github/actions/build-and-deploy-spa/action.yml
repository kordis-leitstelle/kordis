name: 'build-and-deploy-spa'
description: 'Builds SPA Project for Production and Deploys it to a given SWA Environment'

inputs:
  apiUrl:
    required: true
    description: "Base URL of the API"
  oauthConfig:
    required: true
    description: "OAuthConfig from the angular-oauth2-oidc package"
  releaseVersion:
    required: true
    description: "Release Version (Commit or Tag)"
  deploymentEnv:
    required: true
    description: "Deployment Environment"
  sentryKey:
    required: true
    description: "Sentry DSN Key"
  sentryAuthToken:
    required: true
    description: "Sentry Auth Token"
  instatusUrl:
    required: false
    description: "Instatus Dashboard URL"
outputs:
  url:
    description: "SPA URL"
    value: ${{ steps.spa-deployment.outputs.static_web_app_url  }}

runs:
  using: "composite"
  steps:
    - name: Generate Third-Party Licenses
      run: npx  --yes generate-license-file@3.0.0-beta.1 --input package.json --output apps/spa/src/assets/third-party-licenses.txt --ci
      shell: bash
    - run: |
        envsubst < apps/spa/src/environments/environment.template > apps/spa/src/environments/environment.prod.ts
        npx nx build spa --prod
      shell: bash
      env:
        IS_PRODUCTION: true
        ENVIRONMENT_NAME: ${{ inputs.deploymentEnv }}
        API_URL: ${{ inputs.apiUrl }}
        OAUTH_CONFIG: ${{ inputs.oauthConfig }}
        RELEASE_VERSION: ${{ inputs.releaseVersion }}
        SENTRY_KEY: ${{ inputs.sentryKey }}
        INSTATUS_URL: ${{ inputs.instatusUrl }}
    - name: Deploy SPA
      id: spa-deployment
      shell: bash
      run: echo "url=placeholder" >> $GITHUB_OUTPUT
    - name: Build SPA with source maps
      run: npx nx build spa --prod --source-map=true
      shell: bash
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentryAuthToken }}
        SENTRY_ORG: kordis-leitstelle
        SENTRY_PROJECT: kordis-spa
      with:
        environment: ${{ inputs.deploymentEnv }}
        version: ${{ inputs.releaseVersion }}
        sourcemaps: ./dist/apps/spa
