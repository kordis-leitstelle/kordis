name: 'build-and-deploy-api'
description: 'Builds API Project for Production and Deploys it to a given WA Slot'

inputs:
  releaseVersion:
    required: true
    description: "Release Version (Commit or Tag)"
  slot:
    required: true
    description: "Slot Identifier"
  mongoUri:
    required: true
    description: "Mongo Connection URI"
  sentryKey:
    required: true
    description: "Sentry DSN Key"
  sentryAuthToken:
    required: true
    description: "Sentry Auth Token"
  containerRegistryUrl:
    required: true
    description: "Container registry url"
  containerRegistryUsername:
    required: true
    description: "Container registry username"
  containerRegistryPassword:
    required: true
    description: "Container registry password"
outputs:
  url:
    description: "API URL"
    value: ${{ steps.wa-deployment.outputs.webapp-url }}

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.containerRegistryUrl }}
        username: ${{ inputs.containerRegistryUsername }}
        password: ${{ inputs.containerRegistryPassword }}
    - name: Build app
      run: |
        npx nx build api --prod
      shell: bash
    - id: node-version-check
      run: echo "node-version=$(cat .nvmrc | tr -cd '[:digit:].')" >> $GITHUB_OUTPUT
      shell: bash
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: ./
        file: ./apps/api/Dockerfile
        build-args: |
          NODE_VERSION=${{ steps.node-version-check.outputs.node-version}}
        push: true
        tags: |
          ghcr.io/kordis-leitstelle/kordis-api:${{ inputs.releaseVersion}}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Set environment for Azure deployment
      run: envsubst < apps/api/src/.env.template > dist/apps/api/.env
      env:
        MONGODB_URI: ${{ inputs.mongoUri }}
        ENVIRONMENT_NAME: ${{ inputs.slot }}
        RELEASE_VERSION: ${{ inputs.releaseVersion }}
        SENTRY_KEY: ${{ inputs.sentryKey }}
      shell: bash
    - name: Deploy API
      id: wa-deployment
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'kordis-api'
        slot-name: ${{ inputs.slot }}
        package: dist/apps/api/
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentryAuthToken }}
        SENTRY_ORG: kordis-leitstelle
        SENTRY_PROJECT: kordis-api
      with:
        environment: ${{ inputs.slot }}
        version: ${{ inputs.releaseVersion }}
        sourcemaps: ./dist/apps/api
